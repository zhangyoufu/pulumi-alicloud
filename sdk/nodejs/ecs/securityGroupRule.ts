// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Security Group Rule resource.
 *
 * For information about Security Group Rule and how to use it, see [What is Rule](https://www.alibabacloud.com/help/en/ecs/user-guide/security-group-rules).
 *
 * > **NOTE:** Available since v0.1.0.
 *
 * Represents a single `ingress` or `egress` group rule, which can be added to external Security Groups.
 *
 * > **NOTE:**  `nicType` should set to `intranet` when security group type is `vpc` or specifying the `sourceSecurityGroupId`. In this situation it does not distinguish between intranet and internet, the rule is effective on them both.
 *
 * ## Import
 *
 * Security Group Rule can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ecs/securityGroupRule:SecurityGroupRule example <id>
 * ```
 */
export class SecurityGroupRule extends pulumi.CustomResource {
    /**
     * Get an existing SecurityGroupRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityGroupRuleState, opts?: pulumi.CustomResourceOptions): SecurityGroupRule {
        return new SecurityGroupRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/securityGroupRule:SecurityGroupRule';

    /**
     * Returns true if the given object is an instance of SecurityGroupRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityGroupRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityGroupRule.__pulumiType;
    }

    /**
     * The description of the security group rule. The description can be up to 1 to 512 characters in length. Defaults to null.
     *
     * > **NOTE:**  You must specify one of the following field: `cidrIp`,`sourceSecurityGroupId`,`prefixListId`,`ipv6CidrIp`.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly destCidrIp!: pulumi.Output<string | undefined>;
    public readonly destGroupId!: pulumi.Output<string | undefined>;
    public readonly destGroupOwnerAccount!: pulumi.Output<string | undefined>;
    public readonly destPrefixListId!: pulumi.Output<string>;
    /**
     * The transport layer protocol of the Security Group Rule. Valid values: `tcp`, `udp`, `icmp`, `gre`, `all`.
     */
    public readonly ipProtocol!: pulumi.Output<string>;
    public readonly ipv6DestCidrIp!: pulumi.Output<string | undefined>;
    public readonly ipv6SourceCidrIp!: pulumi.Output<string | undefined>;
    /**
     * Network type, can be either `internet` or `intranet`, the default value is `internet`.
     */
    public readonly nicType!: pulumi.Output<string>;
    /**
     * The action of the Security Group Rule that determines whether to allow inbound access. Default value: `accept`. Valid values: `accept`, `drop`.
     */
    public readonly policy!: pulumi.Output<string | undefined>;
    /**
     * The range of port numbers relevant to the IP protocol. Default to "-1/-1". When the protocol is tcp or udp, each side port number range from 1 to 65535 and '-1/-1' will be invalid.
     * For example, `1/200` means that the range of the port numbers is 1-200. Other protocols' 'port_range' can only be "-1/-1", and other values will be invalid.
     */
    public readonly portRange!: pulumi.Output<string | undefined>;
    /**
     * The priority of the Security Group Rule. Default value: `1`. Valid values: `1` to `100`.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * The ID of the Security Group.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    public readonly sourceCidrIp!: pulumi.Output<string | undefined>;
    public readonly sourceGroupId!: pulumi.Output<string | undefined>;
    /**
     * The Alibaba Cloud user account Id of the target security group when security groups are authorized across accounts.  This parameter is invalid if `cidrIp` has already been set.
     */
    public readonly sourceGroupOwnerAccount!: pulumi.Output<string | undefined>;
    public readonly sourcePortRange!: pulumi.Output<string | undefined>;
    public readonly sourcePrefixListId!: pulumi.Output<string>;
    /**
     * The type of the Security Group Rule. Valid values:
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a SecurityGroupRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityGroupRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityGroupRuleArgs | SecurityGroupRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityGroupRuleState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destCidrIp"] = state ? state.destCidrIp : undefined;
            resourceInputs["destGroupId"] = state ? state.destGroupId : undefined;
            resourceInputs["destGroupOwnerAccount"] = state ? state.destGroupOwnerAccount : undefined;
            resourceInputs["destPrefixListId"] = state ? state.destPrefixListId : undefined;
            resourceInputs["ipProtocol"] = state ? state.ipProtocol : undefined;
            resourceInputs["ipv6DestCidrIp"] = state ? state.ipv6DestCidrIp : undefined;
            resourceInputs["ipv6SourceCidrIp"] = state ? state.ipv6SourceCidrIp : undefined;
            resourceInputs["nicType"] = state ? state.nicType : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["portRange"] = state ? state.portRange : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["sourceCidrIp"] = state ? state.sourceCidrIp : undefined;
            resourceInputs["sourceGroupId"] = state ? state.sourceGroupId : undefined;
            resourceInputs["sourceGroupOwnerAccount"] = state ? state.sourceGroupOwnerAccount : undefined;
            resourceInputs["sourcePortRange"] = state ? state.sourcePortRange : undefined;
            resourceInputs["sourcePrefixListId"] = state ? state.sourcePrefixListId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as SecurityGroupRuleArgs | undefined;
            if ((!args || args.ipProtocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipProtocol'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destCidrIp"] = args ? args.destCidrIp : undefined;
            resourceInputs["destGroupId"] = args ? args.destGroupId : undefined;
            resourceInputs["destGroupOwnerAccount"] = args ? args.destGroupOwnerAccount : undefined;
            resourceInputs["destPrefixListId"] = args ? args.destPrefixListId : undefined;
            resourceInputs["ipProtocol"] = args ? args.ipProtocol : undefined;
            resourceInputs["ipv6DestCidrIp"] = args ? args.ipv6DestCidrIp : undefined;
            resourceInputs["ipv6SourceCidrIp"] = args ? args.ipv6SourceCidrIp : undefined;
            resourceInputs["nicType"] = args ? args.nicType : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["portRange"] = args ? args.portRange : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["sourceCidrIp"] = args ? args.sourceCidrIp : undefined;
            resourceInputs["sourceGroupId"] = args ? args.sourceGroupId : undefined;
            resourceInputs["sourceGroupOwnerAccount"] = args ? args.sourceGroupOwnerAccount : undefined;
            resourceInputs["sourcePortRange"] = args ? args.sourcePortRange : undefined;
            resourceInputs["sourcePrefixListId"] = args ? args.sourcePrefixListId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityGroupRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecurityGroupRule resources.
 */
export interface SecurityGroupRuleState {
    /**
     * The description of the security group rule. The description can be up to 1 to 512 characters in length. Defaults to null.
     *
     * > **NOTE:**  You must specify one of the following field: `cidrIp`,`sourceSecurityGroupId`,`prefixListId`,`ipv6CidrIp`.
     */
    description?: pulumi.Input<string>;
    destCidrIp?: pulumi.Input<string>;
    destGroupId?: pulumi.Input<string>;
    destGroupOwnerAccount?: pulumi.Input<string>;
    destPrefixListId?: pulumi.Input<string>;
    /**
     * The transport layer protocol of the Security Group Rule. Valid values: `tcp`, `udp`, `icmp`, `gre`, `all`.
     */
    ipProtocol?: pulumi.Input<string>;
    ipv6DestCidrIp?: pulumi.Input<string>;
    ipv6SourceCidrIp?: pulumi.Input<string>;
    /**
     * Network type, can be either `internet` or `intranet`, the default value is `internet`.
     */
    nicType?: pulumi.Input<string>;
    /**
     * The action of the Security Group Rule that determines whether to allow inbound access. Default value: `accept`. Valid values: `accept`, `drop`.
     */
    policy?: pulumi.Input<string>;
    /**
     * The range of port numbers relevant to the IP protocol. Default to "-1/-1". When the protocol is tcp or udp, each side port number range from 1 to 65535 and '-1/-1' will be invalid.
     * For example, `1/200` means that the range of the port numbers is 1-200. Other protocols' 'port_range' can only be "-1/-1", and other values will be invalid.
     */
    portRange?: pulumi.Input<string>;
    /**
     * The priority of the Security Group Rule. Default value: `1`. Valid values: `1` to `100`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The ID of the Security Group.
     */
    securityGroupId?: pulumi.Input<string>;
    sourceCidrIp?: pulumi.Input<string>;
    sourceGroupId?: pulumi.Input<string>;
    /**
     * The Alibaba Cloud user account Id of the target security group when security groups are authorized across accounts.  This parameter is invalid if `cidrIp` has already been set.
     */
    sourceGroupOwnerAccount?: pulumi.Input<string>;
    sourcePortRange?: pulumi.Input<string>;
    sourcePrefixListId?: pulumi.Input<string>;
    /**
     * The type of the Security Group Rule. Valid values:
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurityGroupRule resource.
 */
export interface SecurityGroupRuleArgs {
    /**
     * The description of the security group rule. The description can be up to 1 to 512 characters in length. Defaults to null.
     *
     * > **NOTE:**  You must specify one of the following field: `cidrIp`,`sourceSecurityGroupId`,`prefixListId`,`ipv6CidrIp`.
     */
    description?: pulumi.Input<string>;
    destCidrIp?: pulumi.Input<string>;
    destGroupId?: pulumi.Input<string>;
    destGroupOwnerAccount?: pulumi.Input<string>;
    destPrefixListId?: pulumi.Input<string>;
    /**
     * The transport layer protocol of the Security Group Rule. Valid values: `tcp`, `udp`, `icmp`, `gre`, `all`.
     */
    ipProtocol: pulumi.Input<string>;
    ipv6DestCidrIp?: pulumi.Input<string>;
    ipv6SourceCidrIp?: pulumi.Input<string>;
    /**
     * Network type, can be either `internet` or `intranet`, the default value is `internet`.
     */
    nicType?: pulumi.Input<string>;
    /**
     * The action of the Security Group Rule that determines whether to allow inbound access. Default value: `accept`. Valid values: `accept`, `drop`.
     */
    policy?: pulumi.Input<string>;
    /**
     * The range of port numbers relevant to the IP protocol. Default to "-1/-1". When the protocol is tcp or udp, each side port number range from 1 to 65535 and '-1/-1' will be invalid.
     * For example, `1/200` means that the range of the port numbers is 1-200. Other protocols' 'port_range' can only be "-1/-1", and other values will be invalid.
     */
    portRange?: pulumi.Input<string>;
    /**
     * The priority of the Security Group Rule. Default value: `1`. Valid values: `1` to `100`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The ID of the Security Group.
     */
    securityGroupId: pulumi.Input<string>;
    sourceCidrIp?: pulumi.Input<string>;
    sourceGroupId?: pulumi.Input<string>;
    /**
     * The Alibaba Cloud user account Id of the target security group when security groups are authorized across accounts.  This parameter is invalid if `cidrIp` has already been set.
     */
    sourceGroupOwnerAccount?: pulumi.Input<string>;
    sourcePortRange?: pulumi.Input<string>;
    sourcePrefixListId?: pulumi.Input<string>;
    /**
     * The type of the Security Group Rule. Valid values:
     */
    type: pulumi.Input<string>;
}
