// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityGroupRuleState extends com.pulumi.resources.ResourceArgs {

    public static final SecurityGroupRuleState Empty = new SecurityGroupRuleState();

    /**
     * The description of the security group rule. The description can be up to 1 to 512 characters in length. Defaults to null.
     * 
     * &gt; **NOTE:**  You must specify one of the following field: `cidr_ip`,`source_security_group_id`,`prefix_list_id`,`ipv6_cidr_ip`.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the security group rule. The description can be up to 1 to 512 characters in length. Defaults to null.
     * 
     * &gt; **NOTE:**  You must specify one of the following field: `cidr_ip`,`source_security_group_id`,`prefix_list_id`,`ipv6_cidr_ip`.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="destCidrIp")
    private @Nullable Output<String> destCidrIp;

    public Optional<Output<String>> destCidrIp() {
        return Optional.ofNullable(this.destCidrIp);
    }

    @Import(name="destGroupId")
    private @Nullable Output<String> destGroupId;

    public Optional<Output<String>> destGroupId() {
        return Optional.ofNullable(this.destGroupId);
    }

    @Import(name="destGroupOwnerAccount")
    private @Nullable Output<String> destGroupOwnerAccount;

    public Optional<Output<String>> destGroupOwnerAccount() {
        return Optional.ofNullable(this.destGroupOwnerAccount);
    }

    @Import(name="destPrefixListId")
    private @Nullable Output<String> destPrefixListId;

    public Optional<Output<String>> destPrefixListId() {
        return Optional.ofNullable(this.destPrefixListId);
    }

    /**
     * The transport layer protocol of the Security Group Rule. Valid values: `tcp`, `udp`, `icmp`, `gre`, `all`.
     * 
     */
    @Import(name="ipProtocol")
    private @Nullable Output<String> ipProtocol;

    /**
     * @return The transport layer protocol of the Security Group Rule. Valid values: `tcp`, `udp`, `icmp`, `gre`, `all`.
     * 
     */
    public Optional<Output<String>> ipProtocol() {
        return Optional.ofNullable(this.ipProtocol);
    }

    @Import(name="ipv6DestCidrIp")
    private @Nullable Output<String> ipv6DestCidrIp;

    public Optional<Output<String>> ipv6DestCidrIp() {
        return Optional.ofNullable(this.ipv6DestCidrIp);
    }

    @Import(name="ipv6SourceCidrIp")
    private @Nullable Output<String> ipv6SourceCidrIp;

    public Optional<Output<String>> ipv6SourceCidrIp() {
        return Optional.ofNullable(this.ipv6SourceCidrIp);
    }

    /**
     * Network type, can be either `internet` or `intranet`, the default value is `internet`.
     * 
     */
    @Import(name="nicType")
    private @Nullable Output<String> nicType;

    /**
     * @return Network type, can be either `internet` or `intranet`, the default value is `internet`.
     * 
     */
    public Optional<Output<String>> nicType() {
        return Optional.ofNullable(this.nicType);
    }

    /**
     * The action of the Security Group Rule that determines whether to allow inbound access. Default value: `accept`. Valid values: `accept`, `drop`.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return The action of the Security Group Rule that determines whether to allow inbound access. Default value: `accept`. Valid values: `accept`, `drop`.
     * 
     */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * The range of port numbers relevant to the IP protocol. Default to &#34;-1/-1&#34;. When the protocol is tcp or udp, each side port number range from 1 to 65535 and &#39;-1/-1&#39; will be invalid.
     * For example, `1/200` means that the range of the port numbers is 1-200. Other protocols&#39; &#39;port_range&#39; can only be &#34;-1/-1&#34;, and other values will be invalid.
     * 
     */
    @Import(name="portRange")
    private @Nullable Output<String> portRange;

    /**
     * @return The range of port numbers relevant to the IP protocol. Default to &#34;-1/-1&#34;. When the protocol is tcp or udp, each side port number range from 1 to 65535 and &#39;-1/-1&#39; will be invalid.
     * For example, `1/200` means that the range of the port numbers is 1-200. Other protocols&#39; &#39;port_range&#39; can only be &#34;-1/-1&#34;, and other values will be invalid.
     * 
     */
    public Optional<Output<String>> portRange() {
        return Optional.ofNullable(this.portRange);
    }

    /**
     * The priority of the Security Group Rule. Default value: `1`. Valid values: `1` to `100`.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return The priority of the Security Group Rule. Default value: `1`. Valid values: `1` to `100`.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The ID of the Security Group.
     * 
     */
    @Import(name="securityGroupId")
    private @Nullable Output<String> securityGroupId;

    /**
     * @return The ID of the Security Group.
     * 
     */
    public Optional<Output<String>> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }

    @Import(name="sourceCidrIp")
    private @Nullable Output<String> sourceCidrIp;

    public Optional<Output<String>> sourceCidrIp() {
        return Optional.ofNullable(this.sourceCidrIp);
    }

    @Import(name="sourceGroupId")
    private @Nullable Output<String> sourceGroupId;

    public Optional<Output<String>> sourceGroupId() {
        return Optional.ofNullable(this.sourceGroupId);
    }

    /**
     * The Alibaba Cloud user account Id of the target security group when security groups are authorized across accounts.  This parameter is invalid if `cidr_ip` has already been set.
     * 
     */
    @Import(name="sourceGroupOwnerAccount")
    private @Nullable Output<String> sourceGroupOwnerAccount;

    /**
     * @return The Alibaba Cloud user account Id of the target security group when security groups are authorized across accounts.  This parameter is invalid if `cidr_ip` has already been set.
     * 
     */
    public Optional<Output<String>> sourceGroupOwnerAccount() {
        return Optional.ofNullable(this.sourceGroupOwnerAccount);
    }

    @Import(name="sourcePortRange")
    private @Nullable Output<String> sourcePortRange;

    public Optional<Output<String>> sourcePortRange() {
        return Optional.ofNullable(this.sourcePortRange);
    }

    @Import(name="sourcePrefixListId")
    private @Nullable Output<String> sourcePrefixListId;

    public Optional<Output<String>> sourcePrefixListId() {
        return Optional.ofNullable(this.sourcePrefixListId);
    }

    /**
     * The type of the Security Group Rule. Valid values:
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the Security Group Rule. Valid values:
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private SecurityGroupRuleState() {}

    private SecurityGroupRuleState(SecurityGroupRuleState $) {
        this.description = $.description;
        this.destCidrIp = $.destCidrIp;
        this.destGroupId = $.destGroupId;
        this.destGroupOwnerAccount = $.destGroupOwnerAccount;
        this.destPrefixListId = $.destPrefixListId;
        this.ipProtocol = $.ipProtocol;
        this.ipv6DestCidrIp = $.ipv6DestCidrIp;
        this.ipv6SourceCidrIp = $.ipv6SourceCidrIp;
        this.nicType = $.nicType;
        this.policy = $.policy;
        this.portRange = $.portRange;
        this.priority = $.priority;
        this.securityGroupId = $.securityGroupId;
        this.sourceCidrIp = $.sourceCidrIp;
        this.sourceGroupId = $.sourceGroupId;
        this.sourceGroupOwnerAccount = $.sourceGroupOwnerAccount;
        this.sourcePortRange = $.sourcePortRange;
        this.sourcePrefixListId = $.sourcePrefixListId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityGroupRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityGroupRuleState $;

        public Builder() {
            $ = new SecurityGroupRuleState();
        }

        public Builder(SecurityGroupRuleState defaults) {
            $ = new SecurityGroupRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the security group rule. The description can be up to 1 to 512 characters in length. Defaults to null.
         * 
         * &gt; **NOTE:**  You must specify one of the following field: `cidr_ip`,`source_security_group_id`,`prefix_list_id`,`ipv6_cidr_ip`.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the security group rule. The description can be up to 1 to 512 characters in length. Defaults to null.
         * 
         * &gt; **NOTE:**  You must specify one of the following field: `cidr_ip`,`source_security_group_id`,`prefix_list_id`,`ipv6_cidr_ip`.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder destCidrIp(@Nullable Output<String> destCidrIp) {
            $.destCidrIp = destCidrIp;
            return this;
        }

        public Builder destCidrIp(String destCidrIp) {
            return destCidrIp(Output.of(destCidrIp));
        }

        public Builder destGroupId(@Nullable Output<String> destGroupId) {
            $.destGroupId = destGroupId;
            return this;
        }

        public Builder destGroupId(String destGroupId) {
            return destGroupId(Output.of(destGroupId));
        }

        public Builder destGroupOwnerAccount(@Nullable Output<String> destGroupOwnerAccount) {
            $.destGroupOwnerAccount = destGroupOwnerAccount;
            return this;
        }

        public Builder destGroupOwnerAccount(String destGroupOwnerAccount) {
            return destGroupOwnerAccount(Output.of(destGroupOwnerAccount));
        }

        public Builder destPrefixListId(@Nullable Output<String> destPrefixListId) {
            $.destPrefixListId = destPrefixListId;
            return this;
        }

        public Builder destPrefixListId(String destPrefixListId) {
            return destPrefixListId(Output.of(destPrefixListId));
        }

        /**
         * @param ipProtocol The transport layer protocol of the Security Group Rule. Valid values: `tcp`, `udp`, `icmp`, `gre`, `all`.
         * 
         * @return builder
         * 
         */
        public Builder ipProtocol(@Nullable Output<String> ipProtocol) {
            $.ipProtocol = ipProtocol;
            return this;
        }

        /**
         * @param ipProtocol The transport layer protocol of the Security Group Rule. Valid values: `tcp`, `udp`, `icmp`, `gre`, `all`.
         * 
         * @return builder
         * 
         */
        public Builder ipProtocol(String ipProtocol) {
            return ipProtocol(Output.of(ipProtocol));
        }

        public Builder ipv6DestCidrIp(@Nullable Output<String> ipv6DestCidrIp) {
            $.ipv6DestCidrIp = ipv6DestCidrIp;
            return this;
        }

        public Builder ipv6DestCidrIp(String ipv6DestCidrIp) {
            return ipv6DestCidrIp(Output.of(ipv6DestCidrIp));
        }

        public Builder ipv6SourceCidrIp(@Nullable Output<String> ipv6SourceCidrIp) {
            $.ipv6SourceCidrIp = ipv6SourceCidrIp;
            return this;
        }

        public Builder ipv6SourceCidrIp(String ipv6SourceCidrIp) {
            return ipv6SourceCidrIp(Output.of(ipv6SourceCidrIp));
        }

        /**
         * @param nicType Network type, can be either `internet` or `intranet`, the default value is `internet`.
         * 
         * @return builder
         * 
         */
        public Builder nicType(@Nullable Output<String> nicType) {
            $.nicType = nicType;
            return this;
        }

        /**
         * @param nicType Network type, can be either `internet` or `intranet`, the default value is `internet`.
         * 
         * @return builder
         * 
         */
        public Builder nicType(String nicType) {
            return nicType(Output.of(nicType));
        }

        /**
         * @param policy The action of the Security Group Rule that determines whether to allow inbound access. Default value: `accept`. Valid values: `accept`, `drop`.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy The action of the Security Group Rule that determines whether to allow inbound access. Default value: `accept`. Valid values: `accept`, `drop`.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param portRange The range of port numbers relevant to the IP protocol. Default to &#34;-1/-1&#34;. When the protocol is tcp or udp, each side port number range from 1 to 65535 and &#39;-1/-1&#39; will be invalid.
         * For example, `1/200` means that the range of the port numbers is 1-200. Other protocols&#39; &#39;port_range&#39; can only be &#34;-1/-1&#34;, and other values will be invalid.
         * 
         * @return builder
         * 
         */
        public Builder portRange(@Nullable Output<String> portRange) {
            $.portRange = portRange;
            return this;
        }

        /**
         * @param portRange The range of port numbers relevant to the IP protocol. Default to &#34;-1/-1&#34;. When the protocol is tcp or udp, each side port number range from 1 to 65535 and &#39;-1/-1&#39; will be invalid.
         * For example, `1/200` means that the range of the port numbers is 1-200. Other protocols&#39; &#39;port_range&#39; can only be &#34;-1/-1&#34;, and other values will be invalid.
         * 
         * @return builder
         * 
         */
        public Builder portRange(String portRange) {
            return portRange(Output.of(portRange));
        }

        /**
         * @param priority The priority of the Security Group Rule. Default value: `1`. Valid values: `1` to `100`.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of the Security Group Rule. Default value: `1`. Valid values: `1` to `100`.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param securityGroupId The ID of the Security Group.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(@Nullable Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        /**
         * @param securityGroupId The ID of the Security Group.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        public Builder sourceCidrIp(@Nullable Output<String> sourceCidrIp) {
            $.sourceCidrIp = sourceCidrIp;
            return this;
        }

        public Builder sourceCidrIp(String sourceCidrIp) {
            return sourceCidrIp(Output.of(sourceCidrIp));
        }

        public Builder sourceGroupId(@Nullable Output<String> sourceGroupId) {
            $.sourceGroupId = sourceGroupId;
            return this;
        }

        public Builder sourceGroupId(String sourceGroupId) {
            return sourceGroupId(Output.of(sourceGroupId));
        }

        /**
         * @param sourceGroupOwnerAccount The Alibaba Cloud user account Id of the target security group when security groups are authorized across accounts.  This parameter is invalid if `cidr_ip` has already been set.
         * 
         * @return builder
         * 
         */
        public Builder sourceGroupOwnerAccount(@Nullable Output<String> sourceGroupOwnerAccount) {
            $.sourceGroupOwnerAccount = sourceGroupOwnerAccount;
            return this;
        }

        /**
         * @param sourceGroupOwnerAccount The Alibaba Cloud user account Id of the target security group when security groups are authorized across accounts.  This parameter is invalid if `cidr_ip` has already been set.
         * 
         * @return builder
         * 
         */
        public Builder sourceGroupOwnerAccount(String sourceGroupOwnerAccount) {
            return sourceGroupOwnerAccount(Output.of(sourceGroupOwnerAccount));
        }

        public Builder sourcePortRange(@Nullable Output<String> sourcePortRange) {
            $.sourcePortRange = sourcePortRange;
            return this;
        }

        public Builder sourcePortRange(String sourcePortRange) {
            return sourcePortRange(Output.of(sourcePortRange));
        }

        public Builder sourcePrefixListId(@Nullable Output<String> sourcePrefixListId) {
            $.sourcePrefixListId = sourcePrefixListId;
            return this;
        }

        public Builder sourcePrefixListId(String sourcePrefixListId) {
            return sourcePrefixListId(Output.of(sourcePrefixListId));
        }

        /**
         * @param type The type of the Security Group Rule. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the Security Group Rule. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SecurityGroupRuleState build() {
            return $;
        }
    }

}
